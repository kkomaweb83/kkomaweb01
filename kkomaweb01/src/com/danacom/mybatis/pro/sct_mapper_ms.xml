<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.danacom.mybatis.pro.sct_mapper_ms">
		
	<select id="sctList" resultType="com.danacom.mybatis.pro.Shop_cart" parameterType="int">
		SELECT * 
		FROM SHOP_CART
		WHERE SCT_MEM_NO = #{sct_mem_no}
		ORDER BY SCT_NO DESC
	</select>
	
	<select id="sctProVo" resultType="com.danacom.mybatis.pro.Shop_proVO" parameterType="com.danacom.mybatis.pro.Shop_cart">
		SELECT 
			PRO_NO, PRO_DISPRICE, PRO_MILEGE
			, TO_CHAR(PRO_DISPRICE, '999,999,999,999')||'원' PRO_CH_PRICE
            , TO_CHAR(PRO_MILEGE, '999,999,999,999')||'원' PRO_CH_MILEGE
            , PRO_PCL_NO
            , PRO_NAME
            , PMG_FILE
            , PCL_NAME
            , TO_CHAR(PRO_DISPRICE*#{sct_count}, '999,999,999,999')||'원' pro_tot_ch_price
            , PRO_DISPRICE*#{sct_count} pro_tot_price
            , PRO_MILEGE*#{sct_count} pro_tot_milege
		FROM PRODUCT
        JOIN PRO_IMG ON PRO_NO = PMG_PRO_NO
        JOIN PRO_CLASS ON PRO_PCL_NO = PCL_NO
        WHERE PRO_NO = #{sct_pro_no}
        AND PMG_IDT_NO = 1
	</select>
	
	<select id="sctTotPrice" resultType="com.danacom.mybatis.pro.SctTotPriceVO" parameterType="com.danacom.mybatis.pro.SctTotPriceVO">
		SELECT 
			TO_CHAR(#{sct_tot_disprice}, '999,999,999,999')||'원' AS sct_tot_ch_disprice
            , TO_CHAR(#{sct_tot_milege}, '999,999,999,999')||'원' AS sct_tot_ch_milege
            , #{sct_tot_disprice} AS sct_tot_disprice
            , #{sct_tot_milege} AS sct_tot_milege
        FROM DUAL
	</select>
	
	<insert id="sctInsert" parameterType="com.danacom.mybatis.pro.Shop_cart">
		INSERT 
		INTO SHOP_CART
		(SCT_NO, SCT_PRO_NO, SCT_COUNT, SCT_MEM_NO)
		VALUES
		((SELECT IFNULL(MAX(SCT_NO), 0)+1 FROM SHOP_CART)
		, #{sct_pro_no}, #{sct_count}, #{sct_mem_no})
	</insert>
	
	<update id="sctUpdate" parameterType="com.danacom.mybatis.pro.Shop_cart">
		UPDATE 
		SHOP_CART SET
		SCT_COUNT = #{sct_count}
		WHERE SCT_NO = #{sct_no}
	</update>
	
	<delete id="sctDelete" parameterType="int">
		DELETE 
		FROM SHOP_CART
		WHERE SCT_NO = #{sct_no}
	</delete>
	
	<delete id="sctAllDelete" parameterType="int">
		DELETE 
		FROM SHOP_CART
		WHERE SCT_MEM_NO = #{sct_mem_no}
	</delete>
	
	<select id="insertChk" resultType="int" parameterType="com.danacom.mybatis.pro.Shop_cart">
		SELECT 
			COUNT(SCT_NO) 
		FROM SHOP_CART
		WHERE SCT_MEM_NO = #{sct_mem_no}
		AND SCT_PRO_NO = #{sct_pro_no}
		AND ROWNUM = 1
	</select>
	
	<update id="countUpdate" parameterType="com.danacom.mybatis.pro.Shop_cart">
		UPDATE 
		SHOP_CART SET
			SCT_COUNT = SCT_COUNT + #{sct_count}
		WHERE SCT_MEM_NO = #{sct_mem_no}
		AND SCT_PRO_NO = #{sct_pro_no}
	</update>
	
	<select id="memMilege" resultType="com.danacom.mybatis.pro.SctTotPriceVO" parameterType="int">
		SELECT  
			MEM_MIL 
			, TO_CHAR(MEM_MIL, '999,999,999,999')||'원' MEM_CH_MIL
		FROM MEM_COM
		WHERE MEM_NO = #{sct_mem_no}	
	</select>
	
	<select id="getOdrMaxNo" resultType="string">
		SELECT IFNULL(MAX(ODR_NO), TO_CHAR(SYSDATE,'YYYYMMDD')||'00000')+1 FROM ORDERS
		WHERE ODR_NO LIKE TO_CHAR(SYSDATE,'YYYYMMDD')||'%'
	</select>
	
	<insert id="odrInsert" parameterType="com.danacom.mybatis.pro.OdrDocVo">
		insert 
		into orders 
		values
		(
			#{odr_no_max}
			, #{mem_no}
			, #{useMileage}
			, #{s_totPrice} - #{useMileage} + 2500
			, #{odr_way}
			, sysdate
			, null
			, #{odr_condition}
		)
	</insert>
	
	<select id="getDlvMaxNo" resultType="string">
		SELECT IFNULL(MAX(dlv_no), 0)+1 FROM delivery
	</select>
	
	<insert id="dlvInsert" parameterType="com.danacom.mybatis.pro.OdrDocVo">
		insert 
		into DELIVERY 
		values
		(
			#{del_no_max}
			, '97979797'
			, #{dlv_sendaddr}
			, #{dlv_sender}
			, #{dlv_tel}
			, #{dlv_sphone}
			, #{dlv_msg}
		)
	</insert>
	
	<insert id="odtInsert" parameterType="com.danacom.mybatis.pro.OdrDet">
		insert 
		into odr_det 
		values
		(
			(SELECT IFNULL(MAX(odt_no), 0)+1 FROM ODR_DET)
			, #{s_pro_no}
			, #{s_odt_count}
			, #{s_pro_disprice}
			, #{s_pro_disprice}
			, #{s_pro_disprice}
			, #{s_pro_milege}
			, '1' 
			, #{odr_no_max}
			, #{del_no_max}
		)	
	</insert>
	
	<update id="editMileage" parameterType="com.danacom.mybatis.pro.OdrDocVo">
		update 
		mem_com set 
			mem_mil = (mem_mil - #{useMileage})
		where mem_no = #{mem_no}
	</update>
	
	<update id="memMilAdd" parameterType="com.danacom.mybatis.pro.OdrDocVo">
		UPDATE 
		MEM_COM SET
			MEM_MIL = MEM_MIL + #{s_totMilege}
		WHERE MEM_NO = #{mem_no}
	</update>
	
	<update id="proCountUpdate" parameterType="hashmap">
		UPDATE 
		PRODUCT SET
		PRO_STOCKCOUNT = PRO_STOCKCOUNT - #{s_count}
		WHERE PRO_NO = #{s_pro_no} 
	</update>
	
	<select id="getOrdersList" resultType="com.danacom.mybatis.pro.MpVo" parameterType="hashmap">
		SELECT 
			SQL_CALC_FOUND_ROWS *
		FROM
		(
		SELECT 
			t1.*
			, @ROWNUM := @ROWNUM + 1 AS rm
			, COUNT(ODR_NO) OVER() AS tot_cont
		FROM
		(
			select 
				ODR_NO
				, ODR_MEM_NO
				, M.MEM_ID
				, ODR_MILEAGE
				, ODR_AMOUNT 
				, ODR_WAY
				, TO_CHAR(ODR_ODATE, 'yyyy-mm-dd') odr_odate
				, IFNULL(TO_CHAR(odr_sdate, 'yyyy-mm-dd'), '입금미확인') odr_sdate
				, IFNULL(TO_CHAR(odr_sdate, 'yyyy-mm-dd'), '미정') odr_cdate
				, ODR_CONDITION
				, DECODE(o.odr_condition, 1, '주문신청', 2, '결제확인', 3, '배송', 4, '주문완료') odr_condition2
			from orders o, mem_com m 
			where o.odr_mem_no = m.mem_no
			<if test="ord_mem_no != null">
			and odr_mem_no = #{ord_mem_no}
			</if> 
			ORDER BY ODR_NO DESC
		) t1, (select @ROWNUM := 0) A
		) t2
		LIMIT #{begin_ms},#{numPerPage}			
	</select>
	
	<select id="getOrdersDetList" resultType="com.danacom.mybatis.pro.MpVo" parameterType="string">
		select
			o.odr_no
			, m.mem_id
			, m.mem_name
			, m.mem_email
			, '용궁 별주부리 거북동' as mem_addr
			, mem_hp as mem_tel
			, mem_hp 
			, to_char(o.odr_odate, 'yyyy-mm-dd') odr_odate
			, d.dlv_sendaddr
			, o.odr_condition
			, o.odr_amount 
			, o.odr_mileage
			, m.mem_mil
			, DECODE(odr_condition, 1, '주문신청', 2, '결제확인', 3, '배송', 4, '주문완료') odr_condition2      
		from orders o, mem_com m, delivery d, odr_det od    
		where m.mem_no=o.odr_mem_no 
		and d.dlv_no=od.odt_dlv_no 
		and od.odt_odr_no = o.odr_no
		and o.odr_no = #{odr_no}
		and rownum = 1
	</select>
	
	<select id="getOdcOdtList" resultType="com.danacom.mybatis.pro.Shop_cart" parameterType="string">
		SELECT 
			ODT_PRO_NO SCT_PRO_NO
			, ODT_COUNT SCT_COUNT
			, '1' as SCT_PRO_PART
		FROM ODR_DET
		WHERE ODT_ODR_NO = #{odr_no}
	</select>
	
	<update id="conditionUpdate" parameterType="com.danacom.mybatis.pro.OdrDocVo">
		update 
		orders set 
			odr_condition = #{odr_condition}
			<if test='odr_condition == "2"'>
			, odr_sdate = sysdate
			</if>
			<if test='odr_condition == "4"'>
			, odr_sdate = sysdate
			</if>
		where odr_no = #{odr_no}
	</update>
	
</mapper>